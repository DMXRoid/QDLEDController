// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.23.3
// source: proto/led.proto

package v2

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WifiMode int32

const (
	WifiMode_WIFI_MODE_UNDEFINED WifiMode = 0
	WifiMode_WIFI_MODE_STATION   WifiMode = 1
	WifiMode_WIFI_MODE_SOFT_AP   WifiMode = 2
	WifiMode_WIFI_MODE_DUAL      WifiMode = 3
)

// Enum value maps for WifiMode.
var (
	WifiMode_name = map[int32]string{
		0: "WIFI_MODE_UNDEFINED",
		1: "WIFI_MODE_STATION",
		2: "WIFI_MODE_SOFT_AP",
		3: "WIFI_MODE_DUAL",
	}
	WifiMode_value = map[string]int32{
		"WIFI_MODE_UNDEFINED": 0,
		"WIFI_MODE_STATION":   1,
		"WIFI_MODE_SOFT_AP":   2,
		"WIFI_MODE_DUAL":      3,
	}
)

func (x WifiMode) Enum() *WifiMode {
	p := new(WifiMode)
	*p = x
	return p
}

func (x WifiMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WifiMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_led_proto_enumTypes[0].Descriptor()
}

func (WifiMode) Type() protoreflect.EnumType {
	return &file_proto_led_proto_enumTypes[0]
}

func (x WifiMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WifiMode.Descriptor instead.
func (WifiMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_led_proto_rawDescGZIP(), []int{0}
}

type ColorMode int32

const (
	ColorMode_COLOR_MODE_STATIC         ColorMode = 0
	ColorMode_COLOR_MODE_STEP           ColorMode = 1
	ColorMode_COLOR_MODE_FADE           ColorMode = 2
	ColorMode_COLOR_MODE_REVERSING_STEP ColorMode = 3
)

// Enum value maps for ColorMode.
var (
	ColorMode_name = map[int32]string{
		0: "COLOR_MODE_STATIC",
		1: "COLOR_MODE_STEP",
		2: "COLOR_MODE_FADE",
		3: "COLOR_MODE_REVERSING_STEP",
	}
	ColorMode_value = map[string]int32{
		"COLOR_MODE_STATIC":         0,
		"COLOR_MODE_STEP":           1,
		"COLOR_MODE_FADE":           2,
		"COLOR_MODE_REVERSING_STEP": 3,
	}
)

func (x ColorMode) Enum() *ColorMode {
	p := new(ColorMode)
	*p = x
	return p
}

func (x ColorMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ColorMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_led_proto_enumTypes[1].Descriptor()
}

func (ColorMode) Type() protoreflect.EnumType {
	return &file_proto_led_proto_enumTypes[1]
}

func (x ColorMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ColorMode.Descriptor instead.
func (ColorMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_led_proto_rawDescGZIP(), []int{1}
}

type RequestMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A string `protobuf:"bytes,1,opt,name=a,proto3" json:"a,omitempty"`
}

func (x *RequestMetadata) Reset() {
	*x = RequestMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_led_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMetadata) ProtoMessage() {}

func (x *RequestMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_led_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMetadata.ProtoReflect.Descriptor instead.
func (*RequestMetadata) Descriptor() ([]byte, []int) {
	return file_proto_led_proto_rawDescGZIP(), []int{0}
}

func (x *RequestMetadata) GetA() string {
	if x != nil {
		return x.A
	}
	return ""
}

type ResponseMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ResponseMetadata) Reset() {
	*x = ResponseMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_led_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMetadata) ProtoMessage() {}

func (x *ResponseMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_led_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMetadata.ProtoReflect.Descriptor instead.
func (*ResponseMetadata) Descriptor() ([]byte, []int) {
	return file_proto_led_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseMetadata) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseMetadata) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetLEDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *RequestMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Filter   string           `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetLEDsRequest) Reset() {
	*x = GetLEDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_led_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLEDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLEDsRequest) ProtoMessage() {}

func (x *GetLEDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_led_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLEDsRequest.ProtoReflect.Descriptor instead.
func (*GetLEDsRequest) Descriptor() ([]byte, []int) {
	return file_proto_led_proto_rawDescGZIP(), []int{2}
}

func (x *GetLEDsRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetLEDsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type GetLEDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Leds     []*LED            `protobuf:"bytes,2,rep,name=leds,proto3" json:"leds,omitempty"`
}

func (x *GetLEDsResponse) Reset() {
	*x = GetLEDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_led_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLEDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLEDsResponse) ProtoMessage() {}

func (x *GetLEDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_led_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLEDsResponse.ProtoReflect.Descriptor instead.
func (*GetLEDsResponse) Descriptor() ([]byte, []int) {
	return file_proto_led_proto_rawDescGZIP(), []int{3}
}

func (x *GetLEDsResponse) GetMetadata() *ResponseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetLEDsResponse) GetLeds() []*LED {
	if x != nil {
		return x.Leds
	}
	return nil
}

type UpdateLEDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *RequestMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Leds     []*LED           `protobuf:"bytes,2,rep,name=leds,proto3" json:"leds,omitempty"`
}

func (x *UpdateLEDsRequest) Reset() {
	*x = UpdateLEDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_led_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLEDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLEDsRequest) ProtoMessage() {}

func (x *UpdateLEDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_led_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLEDsRequest.ProtoReflect.Descriptor instead.
func (*UpdateLEDsRequest) Descriptor() ([]byte, []int) {
	return file_proto_led_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateLEDsRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateLEDsRequest) GetLeds() []*LED {
	if x != nil {
		return x.Leds
	}
	return nil
}

type UpdateLEDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *UpdateLEDsResponse) Reset() {
	*x = UpdateLEDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_led_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLEDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLEDsResponse) ProtoMessage() {}

func (x *UpdateLEDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_led_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLEDsResponse.ProtoReflect.Descriptor instead.
func (*UpdateLEDsResponse) Descriptor() ([]byte, []int) {
	return file_proto_led_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateLEDsResponse) GetMetadata() *ResponseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type LED struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color        *ColorConfig `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	Lights       *LightConfig `protobuf:"bytes,2,opt,name=lights,proto3" json:"lights,omitempty"`
	Wifi         *WifiConfig  `protobuf:"bytes,3,opt,name=wifi,proto3" json:"wifi,omitempty"`
	DataPin      int32        `protobuf:"varint,4,opt,name=data_pin,json=dataPin,proto3" json:"data_pin,omitempty"`
	MdnsName     string       `protobuf:"bytes,5,opt,name=mdns_name,json=mdnsName,proto3" json:"mdns_name,omitempty"`
	FriendlyName string       `protobuf:"bytes,6,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	IpAddress    string       `protobuf:"bytes,7,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	MacAddress   string       `protobuf:"bytes,8,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
}

func (x *LED) Reset() {
	*x = LED{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_led_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LED) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LED) ProtoMessage() {}

func (x *LED) ProtoReflect() protoreflect.Message {
	mi := &file_proto_led_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LED.ProtoReflect.Descriptor instead.
func (*LED) Descriptor() ([]byte, []int) {
	return file_proto_led_proto_rawDescGZIP(), []int{6}
}

func (x *LED) GetColor() *ColorConfig {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *LED) GetLights() *LightConfig {
	if x != nil {
		return x.Lights
	}
	return nil
}

func (x *LED) GetWifi() *WifiConfig {
	if x != nil {
		return x.Wifi
	}
	return nil
}

func (x *LED) GetDataPin() int32 {
	if x != nil {
		return x.DataPin
	}
	return 0
}

func (x *LED) GetMdnsName() string {
	if x != nil {
		return x.MdnsName
	}
	return ""
}

func (x *LED) GetFriendlyName() string {
	if x != nil {
		return x.FriendlyName
	}
	return ""
}

func (x *LED) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *LED) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

type ColorConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode       ColorMode `protobuf:"varint,1,opt,name=mode,proto3,enum=ColorMode" json:"mode,omitempty"`
	FadeDelay  int32     `protobuf:"varint,2,opt,name=fade_delay,json=fadeDelay,proto3" json:"fade_delay,omitempty"`
	StepDelay  int32     `protobuf:"varint,3,opt,name=step_delay,json=stepDelay,proto3" json:"step_delay,omitempty"`
	IsGradient bool      `protobuf:"varint,4,opt,name=is_gradient,json=isGradient,proto3" json:"is_gradient,omitempty"`
	Colors     []string  `protobuf:"bytes,5,rep,name=colors,proto3" json:"colors,omitempty"`
}

func (x *ColorConfig) Reset() {
	*x = ColorConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_led_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorConfig) ProtoMessage() {}

func (x *ColorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_led_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorConfig.ProtoReflect.Descriptor instead.
func (*ColorConfig) Descriptor() ([]byte, []int) {
	return file_proto_led_proto_rawDescGZIP(), []int{7}
}

func (x *ColorConfig) GetMode() ColorMode {
	if x != nil {
		return x.Mode
	}
	return ColorMode_COLOR_MODE_STATIC
}

func (x *ColorConfig) GetFadeDelay() int32 {
	if x != nil {
		return x.FadeDelay
	}
	return 0
}

func (x *ColorConfig) GetStepDelay() int32 {
	if x != nil {
		return x.StepDelay
	}
	return 0
}

func (x *ColorConfig) GetIsGradient() bool {
	if x != nil {
		return x.IsGradient
	}
	return false
}

func (x *ColorConfig) GetColors() []string {
	if x != nil {
		return x.Colors
	}
	return nil
}

type WifiConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode     WifiMode `protobuf:"varint,1,opt,name=mode,proto3,enum=WifiMode" json:"mode,omitempty"`
	Ssid     string   `protobuf:"bytes,2,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Password string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Pk       string   `protobuf:"bytes,4,opt,name=pk,proto3" json:"pk,omitempty"`
}

func (x *WifiConfig) Reset() {
	*x = WifiConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_led_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiConfig) ProtoMessage() {}

func (x *WifiConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_led_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiConfig.ProtoReflect.Descriptor instead.
func (*WifiConfig) Descriptor() ([]byte, []int) {
	return file_proto_led_proto_rawDescGZIP(), []int{8}
}

func (x *WifiConfig) GetMode() WifiMode {
	if x != nil {
		return x.Mode
	}
	return WifiMode_WIFI_MODE_UNDEFINED
}

func (x *WifiConfig) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *WifiConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *WifiConfig) GetPk() string {
	if x != nil {
		return x.Pk
	}
	return ""
}

type LightConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count      int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	StartTime  int32 `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime    int32 `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	IsEnabled  bool  `protobuf:"varint,4,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`
	Brightness int32 `protobuf:"varint,5,opt,name=brightness,proto3" json:"brightness,omitempty"`
}

func (x *LightConfig) Reset() {
	*x = LightConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_led_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LightConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightConfig) ProtoMessage() {}

func (x *LightConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_led_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightConfig.ProtoReflect.Descriptor instead.
func (*LightConfig) Descriptor() ([]byte, []int) {
	return file_proto_led_proto_rawDescGZIP(), []int{9}
}

func (x *LightConfig) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *LightConfig) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *LightConfig) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *LightConfig) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *LightConfig) GetBrightness() int32 {
	if x != nil {
		return x.Brightness
	}
	return 0
}

var File_proto_led_proto protoreflect.FileDescriptor

var file_proto_led_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x1f, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x0c, 0x0a, 0x01, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x61,
	0x22, 0x40, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x56, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x45, 0x44, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x5a, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4c, 0x45, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x04,
	0x6c, 0x65, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x4c, 0x45, 0x44,
	0x52, 0x04, 0x6c, 0x65, 0x64, 0x73, 0x22, 0x5b, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x45, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x04, 0x6c, 0x65, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x4c, 0x45, 0x44, 0x52, 0x04, 0x6c,
	0x65, 0x64, 0x73, 0x22, 0x43, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x45, 0x44,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8d, 0x02, 0x0a, 0x03, 0x4c, 0x45, 0x44,
	0x12, 0x22, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x06, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x77, 0x69,
	0x66, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x77, 0x69, 0x66, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x70, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64,
	0x61, 0x74, 0x61, 0x50, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x64, 0x6e, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x64, 0x6e, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61,
	0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x64, 0x65,
	0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x61,
	0x64, 0x65, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x65, 0x70, 0x5f,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x65,
	0x70, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x67, 0x72, 0x61,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x47,
	0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x22,
	0x6b, 0x0a, 0x0a, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x57, 0x69,
	0x66, 0x69, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x73, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x70, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x6b, 0x22, 0x9c, 0x01, 0x0a,
	0x0b, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x2a, 0x65, 0x0a, 0x08, 0x57,
	0x69, 0x66, 0x69, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x57, 0x49, 0x46, 0x49, 0x5f,
	0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x57, 0x49, 0x46, 0x49, 0x5f,
	0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x4f, 0x46, 0x54, 0x5f, 0x41, 0x50, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x55, 0x41, 0x4c,
	0x10, 0x03, 0x2a, 0x6b, 0x0a, 0x09, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x15, 0x0a, 0x11, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x49, 0x43, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f,
	0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x45, 0x50, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x43,
	0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x41, 0x44, 0x45, 0x10, 0x02,
	0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x52,
	0x45, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x45, 0x50, 0x10, 0x03, 0x32,
	0xa3, 0x01, 0x0a, 0x0d, 0x4c, 0x45, 0x44, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x12, 0x42, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x45, 0x44, 0x73, 0x12, 0x0f, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x45, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x45, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x22, 0x09, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x6c, 0x65,
	0x64, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x4e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x45, 0x44, 0x73, 0x12, 0x12, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x45, 0x44, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x45, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x6c, 0x65,
	0x64, 0x73, 0x3a, 0x01, 0x2a, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x4d, 0x58, 0x52, 0x6f, 0x69, 0x64, 0x2f, 0x51, 0x44, 0x4c, 0x45,
	0x44, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f,
	0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_led_proto_rawDescOnce sync.Once
	file_proto_led_proto_rawDescData = file_proto_led_proto_rawDesc
)

func file_proto_led_proto_rawDescGZIP() []byte {
	file_proto_led_proto_rawDescOnce.Do(func() {
		file_proto_led_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_led_proto_rawDescData)
	})
	return file_proto_led_proto_rawDescData
}

var file_proto_led_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_led_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_led_proto_goTypes = []interface{}{
	(WifiMode)(0),              // 0: WifiMode
	(ColorMode)(0),             // 1: ColorMode
	(*RequestMetadata)(nil),    // 2: RequestMetadata
	(*ResponseMetadata)(nil),   // 3: ResponseMetadata
	(*GetLEDsRequest)(nil),     // 4: GetLEDsRequest
	(*GetLEDsResponse)(nil),    // 5: GetLEDsResponse
	(*UpdateLEDsRequest)(nil),  // 6: UpdateLEDsRequest
	(*UpdateLEDsResponse)(nil), // 7: UpdateLEDsResponse
	(*LED)(nil),                // 8: LED
	(*ColorConfig)(nil),        // 9: ColorConfig
	(*WifiConfig)(nil),         // 10: WifiConfig
	(*LightConfig)(nil),        // 11: LightConfig
}
var file_proto_led_proto_depIdxs = []int32{
	2,  // 0: GetLEDsRequest.metadata:type_name -> RequestMetadata
	3,  // 1: GetLEDsResponse.metadata:type_name -> ResponseMetadata
	8,  // 2: GetLEDsResponse.leds:type_name -> LED
	2,  // 3: UpdateLEDsRequest.metadata:type_name -> RequestMetadata
	8,  // 4: UpdateLEDsRequest.leds:type_name -> LED
	3,  // 5: UpdateLEDsResponse.metadata:type_name -> ResponseMetadata
	9,  // 6: LED.color:type_name -> ColorConfig
	11, // 7: LED.lights:type_name -> LightConfig
	10, // 8: LED.wifi:type_name -> WifiConfig
	1,  // 9: ColorConfig.mode:type_name -> ColorMode
	0,  // 10: WifiConfig.mode:type_name -> WifiMode
	4,  // 11: LEDController.GetLEDs:input_type -> GetLEDsRequest
	6,  // 12: LEDController.UpdateLEDs:input_type -> UpdateLEDsRequest
	5,  // 13: LEDController.GetLEDs:output_type -> GetLEDsResponse
	7,  // 14: LEDController.UpdateLEDs:output_type -> UpdateLEDsResponse
	13, // [13:15] is the sub-list for method output_type
	11, // [11:13] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_led_proto_init() }
func file_proto_led_proto_init() {
	if File_proto_led_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_led_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_led_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_led_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLEDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_led_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLEDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_led_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLEDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_led_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLEDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_led_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LED); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_led_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_led_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_led_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LightConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_led_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_led_proto_goTypes,
		DependencyIndexes: file_proto_led_proto_depIdxs,
		EnumInfos:         file_proto_led_proto_enumTypes,
		MessageInfos:      file_proto_led_proto_msgTypes,
	}.Build()
	File_proto_led_proto = out.File
	file_proto_led_proto_rawDesc = nil
	file_proto_led_proto_goTypes = nil
	file_proto_led_proto_depIdxs = nil
}
